<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AB8AAAAfAAB4PwAAfz//AH///wB///8Af/8=
</value>
  </data>
</root>